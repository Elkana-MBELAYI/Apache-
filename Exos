LES EXERCICES TPS

Exercice 1: Serveur node js

Journalisation d'un site web (avec deux routes : home et help sur un serveur node js), sur un fichier .txt, √† chaque visite du client.


Exercice 2: Serveur angular

Journalisation d'un site web (avec deux routes : home et help sur un serveur angular), sur un fichier .txt, √† chaque visite du client.7


Exercice 3: Serveur apache

Journalisation d'un site web (avec deux pages : index.php et help.php sur un serveur apache), sur un fichier .txt, √† chaque visite du client.


Exercice 4: Backup

L'automatisation de la journalisation et backup, pour chaque log de serveurs (php, node js, angular) dans des fichiers .txt.
A chaque fois que les logs atteindront 2ko de taille, copier leurs contenus dans fichiers backup et vider les log.


Exercice 5: Crontab

Le script doit afficher Hello World
Journaliser l'ex√©cution du fichier 
tester avec tail -f pour voir en temps r√©el les logs


Exercice 6: Crontab

Le script doit ex√©cuter google.com avec curl
Journaliser l'ex√©cution du fichier 
tester avec tail -f pour voir en temps r√©el les logs


Exercice 7: Crontab

Le script doit v√©rifier si le fichier server.conf existe, sinon le t√©l√©charger avec git
Journaliser l'ex√©cution du fichier 
tester avec tail -f pour voir en temps r√©el les logs


Exercice 8: Sys Admin Mailing

Le script doit envoyer les performance du serveur au sys admin
La memoire, % CPU, Stockage disponible
Envoyer au Sys Admin


Exercice 9: Backup S3

Cr√©ation des instances EC2 et S3 : Vous lancez une instance EC2 pour ex√©cuter le script de backup du fichier archiv√© (contenant 4 fichiers). Vous cr√©ez un bucket S3 pour stocker les backups. Et arr√™ter une fois que nous atteignons 4 backups.

Configuration des permissions avec IAM : cr√©ez un r√¥le IAM avec des permissions d'acc√®s complet √† S3 (S3 Full Access) attach√© √† l'instance EC2.

Cr√©ation du script de backup : Vous utilis√© tar pour cr√©er des archives de nos fichiers et dossiers.


Exercice 10: Attaque DDoS

Vous cr√©ez deux instances EC2
Vous √©crivez un script sur le premier EC2 qui va faire une attaque DDoS sur le deuxi√®me EC2.
Et au niveau du deuxi√®me EC2, vous allez √©crire un script qui va voir l‚Äôhistorique des performances CPU chaque seconde et va les mettre sur un fichier .csv
A la fin de l‚Äôattaque, vous faites cat du fichier .csv et notez les variations des performances CPU pour PLOTER la courbe.

Exercice 11 : Load Balancer avec nginx

Vous lancez un VPC dans lequel vous aurez 3 subnets (un public et deux priv√©s) et chaque subnet sera dans son availability zone (donc nous aurons aussi 3 AZ)
Dans chaque subnet, vous lancez un ec2 o√π vous lancez un serveur Node.
Sp√©cialement au niveau de l'availability zone 2 (o√π le subnet est public), vous installez nginx (avec l'algorithme round robin) qui va faire la balance des charges.
Dans chacun des deux ec2 des r√©seaux priv√©s, vous lancez aussi un serveur Node.
Vous affichez une page qui affiche Hello World dans deux ports diff√©rents : 5000 et 5001
Mais au niveau de l'ec2 du subnet public o√π se trouve nginx vous affichez Hello World seulement au port 5000
Au total, vous devez voir naviguer 5 sites sur votre browser (pour mieux voir, vous pouvez jouez sur la couleur du background)

Suppl√©ment : √©crire un script en prenant le nom du serveur et de l'h√¥te et automatiser son envoi sur GitHub 


Exercice 12 : Balance des charges partie serveur avec r√©plication Master - Master 

Vous lancez 3 ec2 comme pr√©c√©demment : un ec2 dans un r√©seau public o√π vous aurez un proxy (qui peut √™tre nginx) qui va faire la balance des charges sur les bases de donn√©es MySQL 

Les deux autres ec2 sont dans deux r√©seaux o√π vous allez lancez MySQL
Et entre les deux bases de donn√©es vous faites la r√©plication Master-Master.


Exercice 13 : Balance des charges partie serveur avec r√©plication Master - slave

Vous lancez 3 ec2 comme pr√©c√©demment : un ec2 dans un r√©seau public o√π vous aurez un proxy (qui peut √™tre nginx) qui va faire la balance des charges sur les bases de donn√©es MySQL

Les deux autres ec2 sont dans deux r√©seaux o√π vous allez lancez MySQL
Et entre les deux bases de donn√©es vous faites la r√©plication Master-slave.


Exercice 14 : API gateway avec Lambda

Vous cr√©ez votre website avec deux pages (login et register), vous l'h√©berger dans S3 (S3 a un nom de domaine).
Vous automatisez son d√©ploiement dans l'ec2 que vous aurez pr√©alablement lanc√©.
Vous lancez MySQL dans l'ec2
Vous lancez aussi Secret Manager et vous y mettez les identifiants 

Ensuite vous lancez API gateway (qui aura un nom de domaine) dans deux Lambda.
Le premier lambda est pour la premi√®re page /login (avec un POST method)
Le deuxi√®me lambda est pour la deuxi√®me page /register (avec un POST method)

Vous √©crivez un algorithme pour t√©l√©charger les identifiants au niveau de secret Manager pour se connecter √† MySQL qui se trouve dans l'ec2

Veuillez √† r√©gler le probl√®me de Cross-Origin Resource Sharing (CORS)


Exercice 15 : Application Load Balancer (ALB)

Vous lancez un Application Load Balancer (ALB) 
Vous devez d√©ployer Deux target groups (chacun avec son auto scale) et vous devez r√©diriger le traffic par rapport aux param√®tres de l'URL.
Vous avez deux param√®tres dans URL : /user et /admin
Nodejs avec express 


Exercice 16 : Application Load Balancer (ALB)

Application Load Balancer (ALB)
Vous mettez un auto scale qui sera attach√© √† un target group
Votre instance doit √©couter le port 5000 (un site Nodejs express)
Et l'auto Scale parle √† l'ALB au port 80


Exercice 17 : Firewall (Pare-feu)

Vous cr√©ez un firewall que vous allez customiser pour surveiller les traffics entrant et sortant en bloquant :
- les ports
- les attaques de d√©ni de service (DoS) : HTTP flood, Application layer attacks, Ping flood, Volumetric attacks, Protocol attacks, Smurf, Slowloris, NTP amplification, Buffer overflow, Teardrop, Misused application attack, Distributed denial of service attacks (DDoS), Ping of Death, UDP attacks
- etc.


Exercice  18 : Web scraping

Cr√©er une base des donn√©es 
Vous faites un web scraping qui va prendre les donn√©es et les enregistrer dans votre base des donn√©es 
Si les donn√©es existent d√©j√†, vous n'enregistrez plus.
Si ce sont les nouvelles donn√©es, vous enregistrez et vous envoyez le message par mail 


Exercice  19 : web scraping sur l'or

Faites du web scraping sur les donn√©es qui peuvent impacter la chute ou la hausse de l'or.
Et vous envoyez le message par mail en pr√©cisant l'heure et la date de l'information obtenue

Exercice 20 : Gestion des Privil√®ges d'utilisateur dans une Base de Donn√©es


Vous √™tes un administrateur de base des donn√©es et vous cr√©ez les tables RESET, EMPLOYES, DEPARTMENTS, T√ÇCHES. 

Vous impl√©mentez les tables √† votre convenance mais tenez √† ce que la table EMPLOYES ait la colonne PASSWORD 

En tant qu'administrateur, veuillez √† ce qu'un nouvel utilisateur Victoria (amie de lynx) ait les restrictions suivantes :
- Ne pas voir la table RESET
- Pouvoir Voir la liste des employ√©s mais pas la colonne PASSWORD 
- Pouvoir lister tous les d√©partements mais pas INSERT, ni UPDATE 
- Pouvoir lister et ins√©rer dans la table TACHES, mais pas UPDATE, ni DELETE

PS : j'ajoute le dernier lot d'exercices tr√®s bient√¥t üôèüèø
